import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useEffect, useState } from 'react'
import { supabase } from '@/utils/supabaseClient'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [isAuth, setIsAuth] = useState<boolean>(false)
  const [userId, setUserId] = useState<string | undefined>()
  const [title, setTitle] = useState<string | undefined>()
  const [desc, setDesc] = useState<string | undefined>()
  const [url, setUrl] = useState<string | undefined>()




  useEffect(() => {
    const getUser = async () => {
      const user = await supabase.auth.getUser()
      if (user) {
        const userLoginId = user.data.user?.id
        setIsAuth(true)
        setUserId(userLoginId)

      }
    }

    getUser()

  }, [])

  useEffect(() => {
    const getLinks = async () => {
      try {
        const { data, error } = await supabase.from("links").select().eq("user_id", userId);
        if (error) throw error
        console.log("data from db: ", data)
      } catch (error) {
        console.log("error", error)
      }
    }

    if (userId) {
      getLinks()
    }


  }, [userId])
  const addNewLink = async () => {
    try {
      if (title && desc && url) {
        const { data, error } = await supabase.from("links").insert({
          title: title,
          description: desc,
          url: url,
          user_id: userId
        }).select()
        if (error) throw error;
        console.log('data: ', data)
      }
    } catch (error) {
      console.log("error: ", error)
    }

  }


  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <div className={styles.description}>
          <p className='text-slate-700'>
            Get started by adding new links&nbsp;
            <code className={styles.code}>Terrnit</code>
          </p>
          <div>
            <a
              href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
              target="_blank"
              rel="noopener noreferrer"
            >
              By{' '}
              <Image
                src="/vercel.svg"
                alt="Vercel Logo"
                className={styles.vercelLogo}
                width={100}
                height={24}
                priority
              />
            </a>
          </div>
        </div>

        <div className={styles.center}>
          <h1 className='text-white text-2xl font-bold'>

            Welcome to Monolink
          </h1>
          <div className={styles.thirteen}>
            <Image
              src="/monolink.svg"
              alt="monolink logo"
              width={40}
              height={31}
              priority
            />
          </div>
        </div>
        {isAuth && (


          <div className='flex flex-col'>
            <div className="mb-4 text-lg">
              <input className="rounded-3xl bg-black bg-opacity-50 border-slate-500 px-6 py-3 text-center text-inherit placeholder-gray-500 shadow-lg outline-none backdrop-blur-md" type="text" name="title" id='title' placeholder="give a title" onChange={(event) => setTitle(event.target.value)} />
            </div>

            <div className="mb-4 text-lg">
              <input className="rounded-3xl bg-black bg-opacity-50 border-slate-500 px-6 py-3 text-center text-inherit placeholder-gray-500 shadow-lg outline-none backdrop-blur-md" type="text" name="description" id='desc' placeholder="give some description" onChange={(event) => setDesc(event.target.value)} />
            </div>
            <div className="mb-4 text-lg">
              <input className="rounded-3xl border-slate-500 bg-black bg-opacity-50 px-6 py-3 text-center text-inherit placeholder-gray-500 shadow-lg outline-none backdrop-blur-md" type="text" name="url" id='url' placeholder="link url" onChange={(event) => setUrl(event.target.value)} />
            </div>
            <button
              onClick={addNewLink}
              className={styles.card}
            >
              <h2 className={inter.className}>
                Add link
              </h2>
            </button>
          </div>
        )}
      </main>
    </>
  )
}
